{"version":3,"sources":["remote-component.config.js","components/Footer.tsx","components/ColorModeSwitcher.tsx","components/DocInputForm.tsx","components/Logo.js","components/Header.tsx","helpers/index.tsx","hooks/useCommit.tsx","hooks/useDoc.tsx","RemoteComponent.js","Document.tsx","firebase.js","components/Hero.js","DocumentList.tsx","App.tsx","theme.js","index.tsx"],"names":["module","exports","resolve","react","require","Footer","borderTopWidth","px","py","alignItems","justifyContent","href","mr","fontSize","textDecoration","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","variant","color","onClick","icon","aria-label","DocInputForm","isLoading","docId","baseBorder","useForm","handleSubmit","register","errors","onSubmit","values","navigate","width","base","md","pointerEvents","bgColor","children","w","display","name","type","defaultValue","ref","placeholder","borderWidth","borderLeftWidth","disabled","borderRightRadius","borderLeftRadius","mx","_hover","message","Logo","height","viewBox","fill","xmlns","fill-rule","clip-rule","d","id","x1","y1","x2","y2","gradientUnits","stop-color","offset","as","letterSpacing","lg","Header","schema","setLens","borderBottomWidth","p","_focus","outline","h","orientation","colorScheme","justifySelf","formatAnchorStatus","anchorStatus","truncate","fullStr","strLen","separator","length","charsToShow","frontChars","Math","ceil","backChars","floor","substr","getCommitById","a","ceramic","loadDocument","then","res","doc","getDocById","requires","createRequires","RemoteComponent","createRemoteComponent","Document","useState","commitId","setCommitId","docContent","setDocContent","lens","useQuery","DocID","fromString","useDoc","initialDocIsLoading","intialDocerror","error","data","fetchDoc","fromOther","useCommit","commitIsLoading","commitError","commitDoc","useEffect","updateContent","state","next","content","undefined","colorMode","metadata","substring","getSchemaFromDoc","mb","maxW","overflowX","url","templateColumns","gap","colStart","colEnd","position","doctype","Object","entries","map","entry","i","fontWeight","toString","backgroundColor","borderRadius","background","whiteSpace","JSON","stringify","my","to","replace","bgGradient","bgClip","wordBreak","anchorProof","blockNumber","blockTimestamp","chainId","maxH","overflowY","log","reverse","commit","newCommitId","cid","firebase","initializeApp","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","db","firestore","Hero","pb","xl","textAlign","h1","lineHeight","span","DocumentList","usePagination","collection","orderBy","limit","items","isStart","isEnd","getPrev","getNext","CeramicClient","App","minH","default","path","theme","extendTheme","config","initialColorMode","useSystemColorMode","queryClient","QueryClient","ReactDOM","render","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.a5ecb98b.chunk.js","sourcesContent":["/**\n * These dependencies will be made available to the Remote Components.\n */\n module.exports = {\n  resolve: {\n    react: require(\"react\"),\n    '@chakra-ui/react': require('@chakra-ui/react'),\n    '@emotion/react': require('@emotion/react'),\n    '@emotion/styled': require('@emotion/styled'),\n    'framer-motion': require('framer-motion')\n  }\n};","import { Flex, Text, Link } from '@chakra-ui/react'\nimport React from 'react'\nimport { AiFillGithub } from 'react-icons/ai'\n\nconst Footer = () => {\n  return (\n    <Flex\n      borderTopWidth={1}\n      px={2}\n      py={2}\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      <Link href=\"https://ebpto.com\">\n         ebpto\n        </Link>\n      \n      <Flex alignItems=\"center\">\n      <Text mr={6} fontSize=\"sm\">\n        Powered by{' '}\n        <Link\n          textDecoration=\"underline\"\n          href=\"https://twitter.com/ownyourip\"\n        >\n          StreamKit\n        </Link>\n      </Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Footer\n","import * as React from 'react'\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react'\nimport { FaMoon, FaSun } from 'react-icons/fa'\n\nconst ColorModeSwitcher = (props: any) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue('light', 'light')\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      variant=\"outline\"\n      color=\"current\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      aria-label={`Switch to ${text} mode`}\n      {...props}\n    />\n  )\n}\n\nexport default ColorModeSwitcher\n","import {\n  Box,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftAddon,\n  InputRightElement,\n} from '@chakra-ui/react'\nimport { navigate } from '@reach/router'\nimport React from 'react'\nimport { useForm } from 'react-hook-form'\n\ninterface DocInputFormProps {\n  mb?: number\n  isLoading?: boolean\n  docId?: string\n  baseBorder?: number\n}\n\nconst DocInputForm: React.SFC<DocInputFormProps> = ({ isLoading, docId, baseBorder = 0 }) => {\n  const { handleSubmit, register, errors } = useForm()\n  const onSubmit = (values: any) => navigate(`/document/${values.docId}`)\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Box width={{ base: '450px', md: '775px' }} mr={1}>\n        <InputGroup size=\"lg\">\n          <InputLeftAddon\n            pointerEvents=\"none\"\n            bgColor=\"gray.100\"\n            color=\"gray.500\"\n            children=\"ceramic://\"\n            w={110}\n            display={{ base: 'none', md: 'inherit' }}\n          />\n          <Input\n            name=\"docId\"\n            type=\"text\"\n            defaultValue={docId}\n            ref={register()}\n            placeholder=\"Enter Stream ID e.g. k3y52l7qbv1frxjdr9qpn9ldvbxb0jg4eig7wtjkdu6gk84vyazw9j4txf4o6d2io\"\n            borderWidth={{base: baseBorder, md: 1}}\n            borderLeftWidth={1}\n          />\n          <InputRightElement\n            w={{ base: 25, md: 75 }}\n            children={\n              <Button\n              type=\"submit\"\n              size='lg'\n              w=\"100%\"\n              disabled={isLoading}\n              color=\"white\"\n              borderRightRadius={{ base: 0, md: 'md' }}\n                borderLeftRadius={0}\n                mx=\"right\"\n                bgColor=\"gray.400\"\n                _hover={{\n                  bgColor: 'rgb(255, 153, 103)',\n                }}\n              >\n                {isLoading ? 'Loading…' : <>Go</>}\n              </Button>\n            }\n          />\n        </InputGroup>\n      </Box>\n      {errors.docId && errors.docId.message}\n    </form>\n  )\n}\n\nexport default DocInputForm\n","import { Box, Flex, Heading } from '@chakra-ui/react'\nimport React from 'react'\n\nconst Logo = (props) => {\n  const { size } = props\n\n  return (\n    <Box>\n      <Flex alignItems=\"center\">\n        <Box mx={2}>\n          <svg\n            width={size === 'lg' ? 40 : 30}\n            height={size === 'lg' ? 40 : 30}\n            viewBox=\"0 0 297 297\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              clip-rule=\"evenodd\"\n              d=\"M0 121.814L34.3393 148.83L0 175.847L148.5 292.66L297 175.847L262.661 148.83L297 121.814L148.5 5L0 121.814ZM66.9824 151.017L148.5 215.135L230.017 151.017L148.5 86.8803L66.9824 151.017Z\"\n              fill=\"url(#paint0_linear)\"\n            />\n            <defs>\n              <linearGradient\n                id=\"paint0_linear\"\n                x1=\"-2.79247e-06\"\n                y1=\"149\"\n                x2=\"297\"\n                y2=\"149\"\n                gradientUnits=\"userSpaceOnUse\"\n              >\n                <stop stop-color=\"#ED8936\" />\n                <stop offset=\"1\" stop-color=\"#ED8936\" />\n              </linearGradient>\n            </defs>\n          </svg>\n        </Box>\n        <Heading\n          as=\"h1\"\n          size={size === 'lg' ? 'xl' : 'lg'}\n          letterSpacing=\"-0.5px\"\n          color=\"orange.400\"\n          display={{ base: 'none', lg: 'inherit' }}\n        >\n          Tiles\n        </Heading>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Logo\n","import {\n  Badge,\n  Box,\n  Center,\n  Divider,\n  Flex,\n  Link as ChakraLink,\n} from '@chakra-ui/react'\nimport React from 'react'\nimport ColorModeSwitcher from './ColorModeSwitcher'\nimport DocInputForm from './DocInputForm'\nimport LensSection from './LensSection'\nimport Logo from './Logo'\nimport SampleDocuments from './SampleDocuments'\n\nexport interface HeaderProps {\n  schema: string\n  setLens: any\n  docId?: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ schema, setLens, docId }) => {\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      borderBottomWidth={1}\n      p={{ base: 0, lg: 2 }}\n    >\n      <Box>\n        <ChakraLink\n          href=\"/\"\n          _hover={{ textDecoration: 'none' }}\n          _focus={{ outline: 'none' }}\n        >\n          <Logo />\n        </ChakraLink>\n      </Box>\n      <Flex alignItems=\"center\">\n        <DocInputForm docId={docId} />\n        <Center h=\"100%\">\n          <Divider orientation=\"vertical\" mx={{ base: 0, lg: 3 }} />\n        </Center>\n        <Badge colorScheme=\"orange\" display={{base: 'none', lg: 'inherit'}}>Mainnet</Badge>\n        {/* <Box mx=\"left\">\n          <LensSection schema={schema} setLens={setLens} />\n        </Box> */}\n      </Flex>\n      <Flex display={{ base: 'none', lg: 'inherit' }}>\n        {/* <Box mr={3}>\n          <SampleDocuments />\n        </Box> */}\n        <ColorModeSwitcher justifySelf=\"flex-end\" />\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Header\n","export const formatAnchorStatus = (anchorStatus: number) => {\n  switch (anchorStatus) {\n    case 0:\n      return 'NOT_REQUESTED (0)'\n    case 1:\n      return 'PENDING (1)'\n    case 2:\n      return 'PROCESSING (2)'\n    case 3:\n      return 'ANCHORED (3)'\n    case 4:\n      return 'FAILED (4)'\n    default:\n      break\n  }\n}\n\nexport const truncate = (\n  fullStr: string,\n  strLen: number,\n  separator?: string\n) => {\n  if (fullStr.length <= strLen) return fullStr\n\n  separator = separator || '…'\n\n  var sepLen = separator.length,\n    charsToShow = strLen - sepLen,\n    frontChars = Math.ceil(charsToShow / 2),\n    backChars = Math.floor(charsToShow / 2)\n\n  return (\n    fullStr.substr(0, frontChars) +\n    separator +\n    fullStr.substr(fullStr.length - backChars)\n  )\n}\n","import { useQuery } from 'react-query'\nimport DocID from \"@ceramicnetwork/docid\";\nimport { ceramic } from '../App'\n\nconst getCommitById = async (docId: any) => {\n  const doc = await ceramic.loadDocument(docId).then((res) => res)\n  return doc\n}\n\nexport default function useCommit(docId: string, commitId: string) {\n  const fetchDoc = DocID.fromOther(DocID.fromString(docId), commitId)\n  return useQuery(['doc', docId, commitId], () => getCommitById(fetchDoc))\n}\n","import { useQuery } from 'react-query'\nimport DocID from \"@ceramicnetwork/docid\";\nimport { ceramic } from '../App'\n\nconst getDocById = async (docId: any) => {\n  const doc = await ceramic.loadDocument(docId).then((res) => res)\n  return doc\n}\n\nexport default function useDoc(docId: string) {\n  return useQuery(['doc', docId], () => getDocById(DocID.fromString(docId)))\n}\n","import {\n  createRemoteComponent,\n  createRequires\n} from \"@paciolan/remote-component\";\nimport { resolve } from \"./remote-component.config\";\n\nconst requires = createRequires(resolve);\n\nexport const RemoteComponent = createRemoteComponent({ requires });","import {\n  Box,\n  Code,\n  Divider,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Link as ChakraLink,\n  Skeleton,\n  Text,\n  useColorMode,\n} from '@chakra-ui/react'\nimport { Link, RouteComponentProps } from '@reach/router'\nimport React, { useEffect, useState } from 'react'\nimport { BiErrorCircle } from 'react-icons/bi'\nimport Header from './components/Header'\nimport { formatAnchorStatus, truncate } from './helpers'\nimport useCommit from './hooks/useCommit'\nimport useDoc from './hooks/useDoc'\nimport { RemoteComponent } from './RemoteComponent'\n\ninterface DocProps extends RouteComponentProps {\n  docId?: string\n  commitId?: string\n}\n\nconst Document = (props: DocProps) => {\n  const { docId } = props\n  const [commitId, setCommitId] = useState<string>()\n  const [docContent, setDocContent] = useState<Object>()\n\n  const [lens, setLens] = useState<any>()\n\n  const {\n    isLoading: initialDocIsLoading,\n    error: intialDocerror,\n    data: doc,\n  } = useDoc(docId!)\n\n  const {\n    isLoading: commitIsLoading,\n    error: commitError,\n    data: commitDoc,\n  } = useCommit(docId!, commitId!)\n\n  const isLoading = initialDocIsLoading || commitIsLoading || false\n  const error = intialDocerror || commitError\n\n  useEffect(() => {\n    // TODO: Clean this up, currently we're loading the initial document twice and this shouldn't be necessary\n    // on the initial render/load\n    let updateContent\n    if (commitId && commitDoc && doc !== commitDoc) {\n      if (!isLoading) {\n        updateContent =\n          commitDoc?.state?.next?.content ||\n          commitDoc?.state?.content ||\n          undefined\n        setDocContent(updateContent)\n      }\n    } else {\n      if (!isLoading) {\n        updateContent =\n          doc?.state?.next?.content || doc?.state?.content || undefined\n        setDocContent(updateContent)\n      }\n    }\n  }, [doc, commitId, commitDoc, isLoading])\n\n  const { colorMode } = useColorMode()\n\n  const handleChangeCommit = (newCommitId: string) => {\n    if (commitId !== newCommitId) {\n      setDocContent(undefined)\n      setCommitId(newCommitId)\n    }\n  }\n\n  const getSchemaFromDoc = (\n    doc: any,\n    initialDocIsLoading: any,\n    intialDocerror: any\n  ) => {\n    if (\n      (initialDocIsLoading || intialDocerror) &&\n      doc?.state?.metadata?.schema\n    ) {\n      return\n    }\n    return doc?.state?.metadata?.schema?.substring(10) // substring removes `ceramic://` from beginning\n  }\n\n  const schema = getSchemaFromDoc(doc, initialDocIsLoading, intialDocerror)\n\n  return (\n    <>\n      <Header schema={schema} setLens={setLens} docId={docId} />\n      <>\n        {error ? (\n          <Text mb={6}>\n            <BiErrorCircle /> Something's wrong – try another stream\n          </Text>\n        ) : (\n          <>\n            {lens ? (\n              isLoading ? (\n                <Skeleton h={10} />\n              ) : (\n                <Box maxW={'100%'} overflowX=\"auto\">\n                  <RemoteComponent\n                    url={lens?.state?.content?.content}\n                    docContent={docContent}\n                  />\n                </Box>\n              )\n            ) : (\n              <Grid\n                templateColumns={{\n                  base: 'repeat(1)',\n                  lg: 'repeat(12)',\n                }}\n                gap={3}\n                p={{ base: 3, lg: 6 }}\n              >\n                <GridItem\n                  colStart={{ base: 1, lg: 1 }}\n                  colEnd={{ base: 1, lg: 9 }}\n                  position=\"relative\"\n                >\n                  <Box>\n                    <Heading size=\"md\" mb={3}>\n                      Content\n                    </Heading>\n                    {isLoading ? (\n                      <Skeleton height=\"20px\" width={400} />\n                    ) : docContent !== undefined ? (\n                      (doc?.state.doctype === 'tile' &&\n                        Object.entries(docContent!).map((entry: any[], i) => (\n                          <Box key={i} mb={3}>\n                            <Text mb={1} fontWeight=\"bold\">\n                              {entry[0] && entry[0].toString()}\n                            </Text>\n                            {typeof entry[1] === 'string' ? (\n                              <Text>{entry[1]}</Text>\n                            ) : (\n                              <Box\n                                backgroundColor={\n                                  colorMode === 'dark' ? 'gray.900' : 'gray.50'\n                                }\n                                p={3}\n                                borderRadius={5}\n                                maxW={600}\n                              >\n                                <Code\n                                  fontSize=\"sm\"\n                                  background=\"transparent\"\n                                  overflowX=\"auto\"\n                                  whiteSpace=\"pre\"\n                                  display=\"block\"\n                                >\n                                  {JSON.stringify(entry[1], undefined, 2)}\n                                </Code>\n                              </Box>\n                            )}\n                          </Box>\n                        ))) ||\n                      (doc?.state.doctype === 'caip10-link' && (\n                        <Text>{docContent.toString()}</Text>\n                      ))\n                    ) : (\n                      <Text color=\"gray.300\">No content</Text>\n                    )}\n                  </Box>\n                  <Divider my={5} display={{ base: 'inherit', lg: 'none' }} />\n                </GridItem>\n                <GridItem\n                  colStart={{ base: 1, lg: 10 }}\n                  colEnd={{ base: 1, lg: 12 }}\n                >\n                  <Box>\n                    <Heading size=\"md\" mb={3}>\n                      ID\n                    </Heading>\n                    <Text>\n                      {docId && truncate(docId, 45)}\n                    </Text>\n                    <Divider my={5} />\n                  </Box>\n                  <Box>\n                    <Heading mb={3} size=\"md\">\n                      Metadata\n                    </Heading>\n                    {doc?.state?.metadata ? (\n                      Object.entries(doc?.state?.metadata).map(\n                        (entry: any[], i) => (\n                          <Box key={i} mb={3}>\n                            <Text fontWeight=\"bold\" mb={1}>\n                              {entry[0] && entry[0].toString()}\n                            </Text>\n                            {entry[0].toString() === 'schema' ? (\n                              <Link\n                                to={`/document/${entry[1]?.replace(\n                                  /^ceramic:\\/\\//,\n                                  ''\n                                )}`}\n                              >\n                                <Text\n                                  bgGradient=\"linear(to-r, orange.600, orange.400)\"\n                                  fontWeight=\"bold\"\n                                  bgClip=\"text\"\n                                  wordBreak=\"break-all\"\n                                >\n                                  {entry[1] && truncate(entry[1].toString(), 45)}\n                                </Text>\n                              </Link>\n                            ) : (\n                              <Text\n                                wordBreak=\"break-all\"\n                              >\n                                {entry[1] && truncate(entry[1].toString(), 45)}\n                              </Text>\n                            )}\n                          </Box>\n                        )\n                      )\n                    ) : (\n                      <>\n                        {isLoading ? (\n                          <Skeleton height=\"20px\" width=\"100%\" />\n                        ) : (\n                          <Text>Get a document to see its metadata</Text>\n                        )}\n                      </>\n                    )}\n                  </Box>\n                  <Divider my={5} />\n                  <Box>\n                    <Heading mb={3} size=\"md\">\n                      Anchoring\n                    </Heading>\n                    {doc?.state?.anchorStatus !== undefined && (\n                      <Box mb={3}>\n                        <Text fontWeight=\"bold\" mb={1}>\n                          Status\n                        </Text>\n                        <Text>\n                          {doc?.state &&\n                            formatAnchorStatus(doc!.state.anchorStatus)}\n                        </Text>\n                      </Box>\n                    )}\n                    {doc?.state?.anchorProof?.blockNumber && (\n                      <Box mb={3}>\n                        <Text mb={1} fontWeight=\"bold\">\n                          Block Number\n                        </Text>\n                        <Text>{doc?.state?.anchorProof?.blockNumber}</Text>\n                      </Box>\n                    )}\n                    {doc?.state?.anchorProof?.blockTimestamp && (\n                      <Box mb={3}>\n                        <Text mb={1} fontWeight=\"bold\">\n                          Block Timestamp\n                        </Text>\n                        <Text>{doc?.state?.anchorProof?.blockTimestamp}</Text>\n                      </Box>\n                    )}\n                    {doc?.state?.anchorProof?.chainId && (\n                      <Box mb={3}>\n                        <Text mb={1} fontWeight=\"bold\">\n                          Chain Id\n                        </Text>\n                        <Text>{doc?.state?.anchorProof?.chainId}</Text>\n                      </Box>\n                    )}\n                  </Box>\n                  <Divider my={5} />\n                  <Box>\n                    <Heading mb={3} size=\"md\">\n                      History\n                    </Heading>\n                    <Box maxH=\"250px\" overflowY=\"scroll\">\n                      {doc?.state?.log ? (\n                        (doc?.state?.log).reverse().map((commit, i) => (\n                          <Box key={i} mb={3}>\n                            <ChakraLink\n                              onClick={() =>\n                                handleChangeCommit(commit.cid.toString())\n                              }\n                              mb={1}\n                            >\n                              <Flex alignItems=\"center\">\n                                {(commit.cid.toString() === commitId ||\n                                  (!commitId && i === 0)) &&\n                                  '[X]'}{' '}\n                                <Text>\n                                  {commit?.cid && truncate(commit?.cid?.toString(), 45)}\n                                </Text>{' '}\n                                {i === 0 && '(latest)'}\n                              </Flex>\n                            </ChakraLink>\n                          </Box>\n                        ))\n                      ) : (\n                        <>\n                          {isLoading ? (\n                            <Skeleton height=\"20px\" width=\"100%\" />\n                          ) : (\n                            <Text>Get a stream to see its log</Text>\n                          )}\n                        </>\n                      )}\n                    </Box>\n                  </Box>\n                  <Divider my={5} />\n                  <Box>\n                    <Heading mb={3} size=\"md\">\n                      Type\n                    </Heading>\n                    <Text>{doc?.state?.doctype}</Text>\n                  </Box>\n                </GridItem>\n              </Grid>\n            )}\n          </>\n        )}\n      </>\n    </>\n  )\n}\n\nexport default Document\n","import firebase from 'firebase'\n// Required for side-effects\nrequire('firebase/firestore')\n\n// Initialize Cloud Firestore through Firebase\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_PROJECTID,\n})\n\nconst db = firebase.firestore()\n\nexport default db\n","import {\n  Box,\n  Center,\n  chakra,\n  Flex,\n  Icon,\n  useColorModeValue,\n} from '@chakra-ui/react'\nimport React from 'react'\nimport DocInputForm from './DocInputForm'\nimport Logo from './Logo'\n\nconst Hero = () => {\n  const Feature = (props) => (\n    <Flex alignItems=\"center\" color={useColorModeValue(null, 'white')}>\n      <Icon\n        boxSize={4}\n        mr={1}\n        color=\"green.600\"\n        viewBox=\"0 0 20 20\"\n        fill=\"currentColor\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n          clipRule=\"evenodd\"\n        ></path>\n      </Icon>\n      {props.children}\n    </Flex>\n  )\n  return (\n    <Box pb={4} py={2} py={32} mx=\"auto\">\n      <Center mb=\"6\">\n        <Logo size=\"lg\" />\n      </Center>\n      <Box\n        w={{ base: 'full', md: 11 / 12, xl: 8 / 12 }}\n        textAlign=\"center\"\n        mx=\"auto\"\n      >\n        <chakra.h1\n          mb={3}\n          fontSize={{ base: '4xl', md: '5xl' }}\n          fontWeight={{ base: 'bold', md: 'extrabold' }}\n          color={useColorModeValue('gray.900', 'gray.100')}\n          lineHeight=\"shorter\"\n        >\n          The Portal to a New Web\n        </chakra.h1>\n        <chakra.p\n          mb={3}\n          fontSize={{ base: 'lg', md: 'xl' }}\n          color=\"gray.500\"\n          lineHeight=\"base\"\n        >\n          Browse the Ceramic network and <br />\n          experience the emergence of a new interaction paradigm.\n        </chakra.p>\n        <chakra.p\n          mb={6}\n          fontSize={{ base: 'lg', md: 'xl' }}\n          color=\"gray.500\"\n          lineHeight=\"base\"\n          fontWeight=\"bold\"\n        >\n          <chakra.span\n            bgGradient=\"linear(to-r, orange.500, orange.300)\"\n            bgClip=\"text\"\n          >\n            Now live on Ceramic mainnet!\n          </chakra.span>{\" \"}\n           🤩 🎉\n        </chakra.p>\n        <Center>\n          <DocInputForm baseBorder={1} />\n        </Center>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Hero\n","import {\n  Box,\n  Button,\n  Flex,\n  Heading,\n  HStack,\n  Link,\n  StackDivider,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from '@chakra-ui/react'\nimport { Link as ReachLink, RouteComponentProps } from '@reach/router'\nimport React from 'react'\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa'\nimport { usePagination } from 'use-pagination-firestore'\nimport LoadingTableRows from './components/LoadingTableRows'\nimport db from './firebase'\nimport dayjs from 'dayjs'\nimport Hero from './components/Hero'\n\ninterface DocListProps extends RouteComponentProps {}\n\nconst DocumentList = (props: DocListProps) => {\n  const {\n    items,\n    isLoading: loading,\n    isStart,\n    isEnd,\n    getPrev,\n    getNext,\n  } = usePagination(db.collection('streams').orderBy('timestamp', 'desc'), {\n    limit: 20,\n  })\n\n  // if (error) return <strong>Error: {JSON.stringify(error)}</strong>\n\n  return (\n    <Box p={6}>\n      <Hero />\n      {/* <Flex alignItems=\"center\" justifyContent=\"space-between\" m={6}>\n        <Heading size=\"md\">Browse All Streams</Heading>\n        <HStack fontSize=\"sm\" divider={<StackDivider />}>\n          <Button\n            onClick={getPrev}\n            disabled={isStart}\n            leftIcon={<FaChevronLeft />}\n          >\n            Prev\n          </Button>\n          <Button\n            onClick={getNext}\n            disabled={isEnd}\n            rightIcon={<FaChevronRight />}\n          >\n            Next\n          </Button>\n        </HStack>\n      </Flex>\n      <Box width=\"100%\">\n        <Table>\n          <Thead>\n            <Tr>\n              <Th>Stream ID</Th>\n              <Th>Date Published</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {loading ? (\n              <LoadingTableRows />\n            ) : (\n              items?.map((item: any) => {\n                const { id, timestamp } = item\n                return (\n                  <Tr key={id}>\n                    <Td>\n                      <Link as={ReachLink} to={`/document/${id}`}>\n                        {id}\n                      </Link>\n                    </Td>\n                    <Td>\n                      {dayjs(timestamp).format(\"h:mm:ssA, MMM D 'YY\") || '—'}\n                    </Td>\n                  </Tr>\n                )\n              })\n            )}\n          </Tbody>\n        </Table>\n      </Box> */}\n    </Box>\n  )\n}\n\nexport default DocumentList\n","import CeramicClient from '@ceramicnetwork/http-client'\nimport { Box } from '@chakra-ui/layout'\nimport { RouteComponentProps, Router } from '@reach/router'\nimport * as React from 'react'\nimport Footer from './components/Footer'\nimport Document from './Document'\nimport DocumentList from './DocumentList'\n\nexport interface DocumentInterface {\n  docId: string\n  timestamp?: string\n}\n\nconst API_URL = 'https://gateway.ceramic.network'\nexport const ceramic = new CeramicClient(API_URL)\n\ninterface AppProps extends RouteComponentProps {\n  docId?: string\n}\n\nexport const App = (props: AppProps) => {\n  return (\n    <>\n      <Box minH=\"90vh\">\n        <Router>\n          <DocumentList default />\n          <Document path=\"/document/:docId\" />\n        </Router>\n      </Box>\n      <Footer />\n    </>\n  )\n}\n","import { extendTheme } from '@chakra-ui/react'\n\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: true,\n}\n\n// 3. extend the theme\nconst theme = extendTheme({ config })\n\nexport default theme\n","import { ChakraProvider, ColorModeScript } from '@chakra-ui/react'\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { App } from './App'\nimport theme from './theme'\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ChakraProvider theme={theme}>\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <App />\n      </ChakraProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}